#!/usr/bin/env python


import sys
sys.dont_write_bytecode = True
import os
import subprocess
import time
import rospy
import xml.etree.ElementTree as ET
from dinsdale_system.tools.read_matrix import *


def add_node(parent, attributes):
    """ Add a node to the xml tree """

    node = ET.SubElement(parent, 'node')
    for att, val in attributes.items():
        node.set(att, val)


def make_launch_file(types, loc):
    """ Make the roslaunch file for the simulation """

    # Create root of xml tree
    launch = ET.Element('launch')

    # Add plants_topology node
    add_node(launch, {'name': 'plants_topology',
                      'pkg' : 'dinsdale',
                      'type': 'node_topology_plants',
                      })

    # Add plants and controllers
    for i, system in enumerate(types):
        add_node(launch, {'name': 'controller%s'%i,
                          'pkg' : 'dinsdale',
                          'type': 'node_controller',
                          'args': '%s %s' % (i, system[0,0]),
                          })
        add_node(launch, {'name': 'plant%s'%i,
                          'pkg' : 'dinsdale',
                          'type': 'node_plant',
                          'args': '%s %s' % (i, system[0,1]),
                          })

    # Add simulation_time node
    add_node(launch, {'name': 'simulation_time',
                      'pkg' : 'dinsdale',
                      'type': 'node_simulation_time',
                      'output': 'screen',
                      })

    # Save xml file
    launch_xml = ET.ElementTree(launch)
    launch_xml.write(os.path.join(loc, 'simulation.launch'))


def make_dir(loc):
    """ Make directory for data logging """

    time_id = time.strftime('%y%m%d_%H%M%S', time.localtime())
    dir_name = time_id + '_dinsdale'
    os.mkdir(os.path.join(loc, 'bags', dir_name))


def main():
    """ Setup the simulation """

    rospy.set_param('/dinsdale/plants_topology_set', False)
    loc, f = os.path.split(os.path.dirname(os.path.abspath(__file__)))
    make_dir(loc)
    path = os.path.join(loc, "src/dinsdale_system/input_parameters/system_types.txt")
    system_types = load_matrix_from_file(path)
    make_launch_file(system_types, loc)
    rospy.sleep(1)
    subprocess.call(["roslaunch", "dinsdale", "simulation.launch"])


if __name__ == '__main__':
    main()
